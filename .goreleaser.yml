project_name: flags-gen

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - main: ./cmd/flags-gen
    binary: flags-gen
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.buildTime={{.Date}}
      - -X main.gitCommit={{.ShortCommit}}

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - README.md
      - LICENSE*

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'

# Homebrew tap configuration (will be enabled once tap repository is created)
brews:
  - name: flags-gen
    repository:
      owner: buji-code  
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TOKEN }}"
    url_template: "https://github.com/buji-code/flags-gen/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
    download_strategy: CurlDownloadStrategy
    commit_author:
      name: goreleaserbot
      email: goreleaser@carlosbecker.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    directory: Formula
    homepage: "https://github.com/buji-code/flags-gen"
    description: "A Go code generator for creating command-line flag parsers from struct definitions"
    license: "MIT"
    skip_upload: false  # Enabled - homebrew-tap repository is ready
    test: |
      system "#{bin}/flags-gen version"
      system "#{bin}/flags-gen --help"
    install: |
      bin.install "flags-gen"
    caveats: |
      Generate flag parsers from Go structs:
        flags-gen -i input.go -o output.go
      
      See example usage at: https://github.com/buji-code/flags-gen#usage

release:
  github:
    owner: buji-code
    name: flags-gen
  draft: false
  prerelease: auto
  name_template: "{{.ProjectName}}-v{{.Version}}"
  header: |
    ## What's Changed
    
    This release includes bug fixes and improvements to flags-gen.
    
  footer: |
    ## Installation
    
    ### Download Binary
    Download the appropriate binary for your platform from the assets below.
    
    ### Homebrew (macOS/Linux)
    ```bash
    brew tap buji-code/tap
    brew install flags-gen
    ```
    
    ### Go Install
    ```bash
    go install github.com/buji-code/flags-gen/cmd/flags-gen@latest
    ```

dockers:
  - image_templates:
      - "ghcr.io/buji-code/flags-gen:{{ .Tag }}"
      - "ghcr.io/buji-code/flags-gen:v{{ .Major }}"
      - "ghcr.io/buji-code/flags-gen:v{{ .Major }}.{{ .Minor }}"
      - "ghcr.io/buji-code/flags-gen:latest"
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    skip_push: auto